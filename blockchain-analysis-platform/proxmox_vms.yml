---
- hosts: localhost  # Run on the machine where Ansible is installed
  connection: local
  tasks:
    - name: Create KubeSphere management VM
      proxmox_kvm:
        api_url: https://your_proxmox_host:8006/api2/json  # Replace
        api_user: your_proxmox_user@pve # Replace
        api_password: your_proxmox_password # Replace
        node: your_proxmox_node # Replace
        vmid: 100 # Choose a unique VM ID
        name: kubesphere_management
        ostemplate: local:iso/ubuntu-22.04-server-cloudinit-amd64.iso # Replace with your template
        cores: 4
        memory: 8192
        net0:
          model: virtio
          bridge: vmbr0 # Replace with your bridge interface
        ipconfig0: ip=192.168.1.10/24,gw=192.168.1.1  # Replace
        state: present
      register: kubesphere_vm

    - name: Create Kubernetes worker VM 1
      proxmox_kvm:
        api_url: https://your_proxmox_host:8006/api2/json # Replace
        api_user: your_proxmox_user@pve # Replace
        api_password: your_proxmox_password # Replace
        node: your_proxmox_node # Replace
        vmid: 101 # Choose a unique VM ID
        name: k8s_worker_1
        ostemplate: local:iso/ubuntu-22.04-server-cloudinit-amd64.iso # Replace
        cores: 2
        memory: 4096
        net0:
          model: virtio
          bridge: vmbr0  # Replace with your bridge interface
        ipconfig0: ip=192.168.1.11/24,gw=192.168.1.1 # Replace
        state: present
      register: worker1_vm

    - name: Create Kubernetes worker VM 2
      proxmox_kvm:
        api_url: https://your_proxmox_host:8006/api2/json # Replace
        api_user: your_proxmox_user@pve # Replace
        api_password: your_proxmox_password # Replace
        node: your_proxmox_node # Replace
        vmid: 102 # Choose a unique VM ID
        name: k8s_worker_2
        ostemplate: local:iso/ubuntu-22.04-server-cloudinit-amd64.iso # Replace
        cores: 2
        memory: 4096
        net0:
          model: virtio
          bridge: vmbr0 # Replace with your bridge interface
        ipconfig0: ip=192.168.1.12/24,gw=192.168.1.1 # Replace
        state: present
      register: worker2_vm
    - name: Wait for SSH to become available on KubeSphere management VM
      wait_for_connection:
        host: "{{ kubesphere_vm.vms[0].net0.ipconfig0.ip }}"
        port: 22
        delay: 10
        timeout: 300

    - name: Wait for SSH to become available on worker 1 VM
      wait_for_connection:
        host: "{{ worker1_vm.vms[0].net0.ipconfig0.ip }}"
        port: 22
        delay: 10
        timeout: 300
    - name: Wait for SSH to become available on worker 2 VM
      wait_for_connection:
        host: "{{ worker2_vm.vms[0].net0.ipconfig0.ip }}"
        port: 22
        delay: 10
        timeout: 300

    - name: Add KubeSphere Management VM to inventory
      add_host:
        name: kubesphere_management
        groups: all
        ansible_host: "{{ kubesphere_vm.vms[0].net0.ipconfig0.ip }}"
        ansible_user: your_user
        ansible_ssh_private_key_file: ~/.ssh/id_rsa

    - name: Add worker 1 VM to inventory
      add_host:
        name: k8s_worker_1
        groups: all
        ansible_host: "{{ worker1_vm.vms[0].net0.ipconfig0.ip }}"
        ansible_user: your_user
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
    - name: Add worker 2 VM to inventory
      add_host:
        name: k8s_worker_2
        groups: all
        ansible_host: "{{ worker2_vm.vms[0].net0.ipconfig0.ip }}"
        ansible_user: your_user
        ansible_ssh_private_key_file: ~/.ssh/id_rsa